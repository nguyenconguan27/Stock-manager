2025-08-10 01:15:51.498 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 01:15:51.503 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 01:15:51.714 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 01:15:51.714 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 01:16:51.560 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 01:16:51.562 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 01:16:51.782 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 01:16:51.782 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 01:19:36.351 [JavaFX Application Thread] DEBUG c.m.s.m.d.impl.ImportReceiptDaoImpl - Start query of database with sql: select ir.*, sum(ird.actual_quantity * ird.unit_price) as total_price_receipt from import_receipt ir 
join import_receipt_detail ird on
ir.id = ird.import_receipt_id
where ir.academic_year = ? 
group by ir.id ;
2025-08-10 01:19:36.353 [JavaFX Application Thread] DEBUG c.m.s.m.d.impl.ImportReceiptDaoImpl - Start query of database with params: 2025
2025-08-10 01:19:38.243 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 01:19:38.244 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 01:19:38.246 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 01:19:38.246 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 01:20:33.797 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 01:20:33.800 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 01:20:34.127 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 01:20:34.127 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 01:25:34.549 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 01:25:34.553 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 01:25:34.758 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 01:25:34.758 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 01:27:26.103 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 01:27:26.107 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 01:27:26.454 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 01:27:26.454 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 01:27:52.345 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 01:27:52.346 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 01:27:52.354 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 01:27:52.355 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 01:27:52.418 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 01:27:52.419 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 01:27:52.499 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:307)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:106)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:390)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 01:27:52.515 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 01:27:52.516 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 01:27:52.526 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 01:27:52.526 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: {}
2025-08-10 01:27:52.541 [JavaFX Application Thread] ERROR c.m.s.m.d.i.InventoryDetailDaoImpl - SQL Exception while querying database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
org.h2.jdbc.JdbcSQLDataException: Parameter "#1" is not set; SQL statement:
select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5 [90012-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:199)
	at com.h2database@2.2.222/org.h2.expression.Parameter.checkSet(Parameter.java:75)
	at com.h2database@2.2.222/org.h2.command.Prepared.checkParameters(Prepared.java:207)
	at com.h2database@2.2.222/org.h2.command.CommandContainer.query(CommandContainer.java:251)
	at com.h2database@2.2.222/org.h2.command.Command.executeQuery(Command.java:192)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:131)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:95)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.InventoryDetailDaoImpl.findProductHaveMaxQuantityByProductGroup(InventoryDetailDaoImpl.java:121)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.InventoryDetailServiceImpl.findProductHaveMaxQuantityByProductGroup(InventoryDetailServiceImpl.java:63)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findListProductHaveMaxQuantityInStockByGroup(ProductDetailPresenter.java:64)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:309)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:106)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:390)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 01:32:05.794 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 01:32:05.796 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 01:32:06.034 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 01:32:06.034 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 01:32:07.566 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 01:32:07.566 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 01:32:07.568 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 01:32:07.568 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 01:32:07.576 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 01:32:07.576 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 01:32:07.597 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:311)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:107)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:399)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 01:32:07.603 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 01:32:07.603 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 01:32:07.605 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 01:32:07.605 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 01:32:07.608 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 01:32:07.609 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 01:32:07.610 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 01:32:07.610 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 10:43:02.291 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 10:43:02.293 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 10:43:02.506 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 10:43:02.506 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 10:43:03.898 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 10:43:03.898 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 10:43:03.900 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 10:43:03.900 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 10:43:03.908 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 10:43:03.908 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 10:43:03.925 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:311)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:107)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:401)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 10:43:03.928 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 10:43:03.928 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 10:43:03.929 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 10:43:03.930 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 10:43:03.931 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 10:43:03.931 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 10:43:03.931 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 10:43:03.932 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 10:48:52.488 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 10:48:52.489 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 10:48:52.672 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 10:48:52.673 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 10:48:53.602 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 10:48:53.603 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 10:48:53.607 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 10:48:53.608 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 10:48:53.620 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 10:48:53.620 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 10:48:53.638 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:321)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:104)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:414)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 10:48:53.643 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 10:48:53.643 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 10:48:53.644 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 10:48:53.644 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 10:48:53.645 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 10:48:53.646 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 10:48:53.647 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 10:48:53.647 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 10:51:24.883 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 10:51:24.884 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 10:51:25.093 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 10:51:25.093 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 10:51:26.074 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 10:51:26.074 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 10:51:26.076 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 10:51:26.077 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 10:51:26.085 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 10:51:26.086 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 10:51:26.108 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:317)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:104)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:427)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 10:51:26.113 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 10:51:26.113 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 10:51:26.114 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 10:51:26.115 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 10:51:26.117 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 10:51:26.118 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 10:51:26.119 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 10:51:26.119 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:07:24.928 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 11:07:24.930 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 11:07:25.112 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:07:25.112 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:07:26.569 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:07:26.570 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:07:26.571 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 11:07:26.571 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:07:26.580 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 11:07:26.580 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:07:26.600 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:320)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:104)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:435)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 11:07:26.605 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:07:26.605 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:07:26.607 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:07:26.607 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:07:26.609 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:07:26.609 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:07:26.610 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:07:26.610 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:14:18.548 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 11:14:18.550 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 11:14:18.764 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:14:18.764 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:14:20.058 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:14:20.058 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:14:20.062 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 11:14:20.062 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:14:20.075 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 11:14:20.075 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:14:20.099 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:321)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:104)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:443)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 11:14:20.102 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:14:20.102 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:14:20.104 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:14:20.104 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:14:20.105 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:14:20.106 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:14:20.107 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:14:20.108 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:17:59.167 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 11:17:59.168 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 11:17:59.346 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:17:59.347 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:18:00.339 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:18:00.339 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:18:00.341 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 11:18:00.342 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:18:00.350 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 11:18:00.351 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:18:00.370 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:314)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:104)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:462)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 11:18:00.374 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:18:00.374 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:18:00.376 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:18:00.376 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:18:00.377 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:18:00.377 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:18:00.379 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:18:00.379 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:28:02.361 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 11:28:02.363 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 11:28:02.547 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:28:02.547 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:28:03.610 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:28:03.610 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:28:03.612 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 11:28:03.613 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:28:03.623 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 11:28:03.624 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:28:03.642 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:316)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:104)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:473)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 11:28:03.646 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:28:03.646 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:28:03.648 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:28:03.648 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:28:03.649 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:28:03.649 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:28:03.650 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:28:03.651 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:31:46.643 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 11:31:46.647 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 11:31:46.849 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:31:46.849 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:31:48.089 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:31:48.089 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:31:48.091 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 11:31:48.091 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:31:48.100 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 11:31:48.100 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:31:48.123 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:313)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:104)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:467)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 11:31:48.130 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:31:48.130 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:31:48.131 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:31:48.132 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:31:48.134 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:31:48.134 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:31:48.135 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:31:48.135 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:41:19.225 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 11:41:19.227 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 11:41:19.424 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:41:19.424 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:41:20.944 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:41:20.944 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:41:20.946 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 11:41:20.946 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:41:20.956 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 11:41:20.956 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:41:20.975 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:313)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:104)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:464)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 11:41:20.978 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:41:20.978 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:41:20.979 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:41:20.980 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:41:20.981 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:41:20.981 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:41:20.982 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:41:20.982 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:41:54.418 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 11:41:54.419 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 11:41:54.600 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:41:54.600 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:41:55.823 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:41:55.823 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:41:55.825 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 11:41:55.825 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:41:55.833 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 11:41:55.833 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:41:55.853 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:313)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:104)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:464)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 11:41:55.858 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:41:55.858 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:41:55.859 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:41:55.860 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:41:55.860 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:41:55.861 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:41:55.862 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:41:55.862 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:42:50.999 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 11:42:51.000 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 11:42:51.189 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:42:51.189 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:42:52.445 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:42:52.446 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:42:52.447 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 11:42:52.447 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:42:52.455 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 11:42:52.455 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:42:52.473 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:313)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:104)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:464)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 11:42:52.482 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:42:52.482 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:42:52.484 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:42:52.484 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:42:52.485 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:42:52.486 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:42:52.487 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:42:52.488 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:45:12.936 [JavaFX Application Thread] DEBUG c.m.s.m.d.impl.ImportReceiptDaoImpl - Start query of database with sql: select ir.*, sum(ird.actual_quantity * ird.unit_price) as total_price_receipt from import_receipt ir 
join import_receipt_detail ird on
ir.id = ird.import_receipt_id
where ir.academic_year = ? 
group by ir.id ;
2025-08-10 11:45:12.938 [JavaFX Application Thread] DEBUG c.m.s.m.d.impl.ImportReceiptDaoImpl - Start query of database with params: 2025
2025-08-10 11:45:13.956 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 11:45:13.956 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 11:45:13.957 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:45:13.957 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:45:14.925 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:45:14.925 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:45:14.929 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 11:45:14.929 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:45:14.935 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 11:45:14.936 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:45:14.954 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:313)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:104)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:469)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 11:45:14.958 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:45:14.958 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:45:14.959 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:45:14.959 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:45:14.960 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:45:14.960 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:45:14.961 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:45:14.961 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:45:56.818 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 11:45:56.820 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 11:45:57.019 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:45:57.019 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:45:58.179 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:45:58.180 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:45:58.182 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 11:45:58.182 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:45:58.192 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 11:45:58.192 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:45:58.210 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:313)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:104)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:469)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 11:45:58.213 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:45:58.213 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:45:58.214 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:45:58.215 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:45:58.216 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:45:58.216 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:45:58.218 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:45:58.218 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:46:38.015 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 11:46:38.017 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 11:46:38.222 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:46:38.222 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:46:39.357 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:46:39.357 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:46:39.359 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 11:46:39.359 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:46:39.367 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 11:46:39.368 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:46:39.384 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:313)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:104)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:470)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 11:46:39.387 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:46:39.387 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:46:39.388 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:46:39.388 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:46:39.390 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:46:39.390 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:46:39.391 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:46:39.391 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:46:55.555 [JavaFX Application Thread] DEBUG c.m.s.m.d.impl.ImportReceiptDaoImpl - Start query of database with sql: select ir.*, sum(ird.actual_quantity * ird.unit_price) as total_price_receipt from import_receipt ir 
join import_receipt_detail ird on
ir.id = ird.import_receipt_id
where ir.academic_year = ? 
group by ir.id ;
2025-08-10 11:46:55.556 [JavaFX Application Thread] DEBUG c.m.s.m.d.impl.ImportReceiptDaoImpl - Start query of database with params: 2025
2025-08-10 11:47:01.242 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 11:47:01.242 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 11:47:01.243 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:47:01.243 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:47:44.524 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:47:44.524 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:47:44.525 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 11:47:44.525 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:47:44.530 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 11:47:44.530 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:47:44.535 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:313)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:104)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:470)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 11:47:44.536 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:47:44.536 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:47:44.537 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:47:44.537 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:47:44.537 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:47:44.537 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:47:44.538 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:47:44.538 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:49:40.061 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 11:49:40.064 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 11:49:40.262 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:49:40.262 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:49:41.296 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:49:41.296 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:49:41.300 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 11:49:41.300 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:49:41.308 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 11:49:41.308 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:49:41.328 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:313)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:104)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:463)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 11:49:41.330 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:49:41.330 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:49:41.332 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:49:41.332 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:49:41.333 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:49:41.333 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:49:41.334 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:49:41.334 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:51:53.131 [JavaFX Application Thread] DEBUG c.m.s.m.d.impl.ImportReceiptDaoImpl - Start query of database with sql: select ir.*, sum(ird.actual_quantity * ird.unit_price) as total_price_receipt from import_receipt ir 
join import_receipt_detail ird on
ir.id = ird.import_receipt_id
where ir.academic_year = ? 
group by ir.id ;
2025-08-10 11:51:53.132 [JavaFX Application Thread] DEBUG c.m.s.m.d.impl.ImportReceiptDaoImpl - Start query of database with params: 2025
2025-08-10 11:51:54.019 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 11:51:54.019 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 11:51:54.021 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:51:54.021 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:51:55.070 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:51:55.070 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:51:55.072 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 11:51:55.072 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:51:55.080 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 11:51:55.081 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:51:55.100 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:313)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:104)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:466)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 11:51:55.102 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:51:55.103 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:51:55.104 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:51:55.104 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:51:55.105 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:51:55.105 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:51:55.105 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:51:55.105 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:52:21.346 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 11:52:21.348 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 11:52:21.529 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:52:21.529 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:52:22.432 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:52:22.432 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:52:22.435 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 11:52:22.435 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:52:22.444 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 11:52:22.444 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:52:22.461 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:313)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:104)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:466)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 11:52:22.464 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:52:22.464 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:52:22.466 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:52:22.467 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:52:22.468 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:52:22.468 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:52:22.469 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:52:22.470 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:53:52.816 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 11:53:52.818 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 11:53:53.011 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:53:53.011 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:53:54.057 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:53:54.057 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:53:54.059 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 11:53:54.060 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:53:54.069 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 11:53:54.069 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:53:54.087 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:313)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:104)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:466)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 11:53:54.092 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:53:54.092 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:53:54.093 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:53:54.094 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:53:54.095 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:53:54.095 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:53:54.096 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:53:54.096 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:54:22.123 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 11:54:22.126 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 11:54:22.316 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:54:22.316 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:54:23.131 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:54:23.131 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:54:23.132 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 11:54:23.132 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:54:23.142 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 11:54:23.143 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:54:23.162 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:313)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:104)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:466)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 11:54:23.168 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:54:23.168 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:54:23.170 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:54:23.170 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:54:23.171 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:54:23.171 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:54:23.172 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:54:23.172 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:57:18.258 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 11:57:18.259 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 11:57:18.442 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:57:18.442 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:57:19.238 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:57:19.238 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:57:19.242 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 11:57:19.242 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:57:19.253 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 11:57:19.253 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:57:19.272 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:313)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:104)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:466)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 11:57:19.275 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:57:19.276 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:57:19.278 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:57:19.278 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:57:19.280 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:57:19.280 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:57:19.281 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:57:19.281 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:58:27.209 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 11:58:27.211 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 11:58:27.402 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:58:27.402 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:58:28.640 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 11:58:28.641 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 11:58:28.642 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 11:58:28.643 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:58:28.652 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 11:58:28.652 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:58:28.671 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:313)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:104)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:465)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 11:58:28.674 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:58:28.674 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:58:28.676 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 11:58:28.676 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:58:28.679 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:58:28.679 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 11:58:28.680 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 11:58:28.680 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 12:00:30.536 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 12:00:30.538 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 12:00:30.716 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 12:00:30.716 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 12:00:32.943 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 12:00:32.944 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 12:00:32.945 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 12:00:32.945 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 12:00:32.955 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 12:00:32.956 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 12:00:32.978 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:313)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:104)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:466)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 12:00:32.982 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 12:00:32.982 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 12:00:32.984 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 12:00:32.984 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 12:00:32.986 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 12:00:32.986 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 12:00:32.988 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 12:00:32.988 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 12:01:13.317 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 12:01:13.318 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 12:01:13.498 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 12:01:13.499 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 12:01:15.319 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 12:01:15.319 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 12:01:15.322 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 12:01:15.322 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 12:01:15.332 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 12:01:15.332 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 12:01:15.350 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:313)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:104)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:466)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 12:01:15.353 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 12:01:15.354 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 12:01:15.356 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 12:01:15.356 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 12:01:15.358 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 12:01:15.358 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 12:01:15.359 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 12:01:15.359 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 12:05:32.088 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 12:05:32.090 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 12:05:32.333 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 12:05:32.333 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 12:05:33.749 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 12:05:33.750 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 12:05:33.752 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 12:05:33.752 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 12:05:33.761 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 12:05:33.762 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 12:05:33.797 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:319)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:104)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:472)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 12:05:33.800 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 12:05:33.800 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 12:05:33.802 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 12:05:33.802 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 12:05:33.803 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 12:05:33.803 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 12:05:33.804 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 12:05:33.804 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 12:07:23.983 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 12:07:23.984 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 12:07:24.177 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 12:07:24.177 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 12:07:25.341 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 12:07:25.342 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 12:07:25.343 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 12:07:25.343 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 12:07:25.351 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 12:07:25.352 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 12:07:25.370 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:319)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:104)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:472)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 12:07:25.375 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 12:07:25.375 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 12:07:25.377 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 12:07:25.377 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 12:07:25.379 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 12:07:25.379 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 12:07:25.380 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 12:07:25.380 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 15:12:25.288 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 15:12:25.292 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 15:12:25.567 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 15:12:25.568 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 15:12:26.522 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 15:12:26.523 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 15:12:26.525 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 15:12:26.526 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 15:12:26.535 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 15:12:26.536 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 15:12:26.563 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:319)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:104)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:472)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 15:12:26.566 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 15:12:26.566 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 15:12:26.567 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 15:12:26.567 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 15:12:26.569 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 15:12:26.569 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 15:12:26.570 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 15:12:26.571 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 15:18:19.069 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 15:18:19.071 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 15:18:19.338 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 15:18:19.338 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 15:18:20.815 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 15:18:20.816 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 15:18:20.818 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 15:18:20.819 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 15:18:20.831 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 15:18:20.832 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 15:18:20.854 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:319)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:104)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:472)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 15:18:20.858 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 15:18:20.858 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 15:18:20.860 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 15:18:20.860 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 15:18:20.862 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 15:18:20.862 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 15:18:20.864 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 15:18:20.864 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 15:55:51.755 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 15:55:51.757 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 15:55:52.022 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 15:55:52.022 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 15:55:54.129 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 15:55:54.129 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 15:55:54.131 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 15:55:54.131 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 15:55:54.144 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 15:55:54.144 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 15:55:54.171 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:318)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:104)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:471)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 15:55:54.175 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 15:55:54.175 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 15:55:54.177 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 15:55:54.178 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 15:55:54.180 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 15:55:54.180 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 15:55:54.181 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 15:55:54.182 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 15:56:45.271 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 15:56:45.274 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 15:56:45.526 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 15:56:45.526 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 15:56:46.518 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 15:56:46.518 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 15:56:46.520 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 15:56:46.520 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 15:56:46.530 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 15:56:46.530 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 15:56:46.553 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:320)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:105)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:473)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 15:56:46.557 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 15:56:46.557 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 15:56:46.558 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 15:56:46.559 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 15:56:46.561 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 15:56:46.561 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 15:56:46.562 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 15:56:46.562 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:00:02.930 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 16:00:02.933 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 16:00:03.127 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 16:00:03.128 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 16:00:04.195 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 16:00:04.195 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 16:00:04.198 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 16:00:04.198 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:00:04.208 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 16:00:04.209 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:00:04.230 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:327)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:111)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:480)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 16:00:04.235 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 16:00:04.236 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:00:04.237 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 16:00:04.238 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:00:04.239 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 16:00:04.239 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:00:04.242 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 16:00:04.242 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:01:13.408 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 16:01:13.410 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 16:01:13.609 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 16:01:13.609 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 16:01:15.265 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 16:01:15.265 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 16:01:15.267 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 16:01:15.268 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:01:15.277 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 16:01:15.277 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:01:15.298 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:329)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:111)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:482)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 16:01:15.304 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 16:01:15.305 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:01:15.306 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 16:01:15.306 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:01:15.307 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 16:01:15.307 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:01:15.309 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 16:01:15.309 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:02:05.393 [JavaFX Application Thread] DEBUG c.m.s.m.d.impl.ImportReceiptDaoImpl - Start query of database with sql: select ir.*, sum(ird.actual_quantity * ird.unit_price) as total_price_receipt from import_receipt ir 
join import_receipt_detail ird on
ir.id = ird.import_receipt_id
where ir.academic_year = ? 
group by ir.id ;
2025-08-10 16:02:05.394 [JavaFX Application Thread] DEBUG c.m.s.m.d.impl.ImportReceiptDaoImpl - Start query of database with params: 2025
2025-08-10 16:02:06.478 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 16:02:06.478 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 16:02:06.479 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 16:02:06.479 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 16:02:07.603 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 16:02:07.603 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 16:02:07.606 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 16:02:07.606 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:02:07.616 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 16:02:07.616 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:02:07.637 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:329)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:111)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:482)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 16:02:07.644 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 16:02:07.644 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:02:07.646 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 16:02:07.646 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:02:07.649 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 16:02:07.650 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:02:07.650 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 16:02:07.650 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:03:29.685 [JavaFX Application Thread] DEBUG c.m.s.m.d.impl.ImportReceiptDaoImpl - Start query of database with sql: select ir.*, sum(ird.actual_quantity * ird.unit_price) as total_price_receipt from import_receipt ir 
join import_receipt_detail ird on
ir.id = ird.import_receipt_id
where ir.academic_year = ? 
group by ir.id ;
2025-08-10 16:03:29.686 [JavaFX Application Thread] DEBUG c.m.s.m.d.impl.ImportReceiptDaoImpl - Start query of database with params: 2025
2025-08-10 16:06:04.930 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 16:06:04.931 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 16:06:05.140 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 16:06:05.140 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 16:06:06.549 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 16:06:06.550 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 16:06:06.552 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 16:06:06.552 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:06:06.563 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 16:06:06.563 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:06:06.586 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:330)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:111)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:486)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 16:06:06.590 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 16:06:06.590 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:06:06.591 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 16:06:06.592 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:06:06.593 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 16:06:06.593 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:06:06.594 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 16:06:06.595 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:06:28.827 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 16:06:28.828 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 16:06:29.017 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 16:06:29.017 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 16:06:29.861 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 16:06:29.861 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 16:06:29.863 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 16:06:29.863 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:06:29.872 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 16:06:29.872 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:06:29.890 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:330)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:111)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:486)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 16:06:29.894 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 16:06:29.894 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:06:29.896 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 16:06:29.896 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:06:29.898 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 16:06:29.898 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:06:29.899 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 16:06:29.899 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:06:47.693 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 16:06:47.695 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 16:06:47.893 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 16:06:47.893 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 16:06:48.819 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 16:06:48.820 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 16:06:48.822 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 16:06:48.823 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:06:48.833 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 16:06:48.833 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:06:48.856 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:330)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:111)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:486)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 16:06:48.859 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 16:06:48.860 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:06:48.861 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 16:06:48.861 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:06:48.863 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 16:06:48.863 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:06:48.864 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 16:06:48.864 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:07:18.940 [JavaFX Application Thread] DEBUG c.m.s.m.d.impl.ImportReceiptDaoImpl - Start query of database with sql: select ir.*, sum(ird.actual_quantity * ird.unit_price) as total_price_receipt from import_receipt ir 
join import_receipt_detail ird on
ir.id = ird.import_receipt_id
where ir.academic_year = ? 
group by ir.id ;
2025-08-10 16:07:18.940 [JavaFX Application Thread] DEBUG c.m.s.m.d.impl.ImportReceiptDaoImpl - Start query of database with params: 2025
2025-08-10 16:07:22.071 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 16:07:22.072 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 16:07:22.072 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 16:07:22.073 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 16:07:23.570 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 16:07:23.570 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 16:07:23.571 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 16:07:23.571 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:07:23.575 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 16:07:23.575 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:07:23.584 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:330)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:111)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:486)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 16:07:23.585 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 16:07:23.586 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:07:23.587 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 16:07:23.587 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:07:23.587 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 16:07:23.587 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:07:23.588 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 16:07:23.588 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:12:37.237 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with sql: select p.id, p.code, p.name, p.group_id from product as p
2025-08-10 16:12:37.241 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductDao - Start query of database with params: {}
2025-08-10 16:12:37.503 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 16:12:37.503 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 16:12:38.703 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with sql: SELECT * FROM product_group
2025-08-10 16:12:38.704 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ProductGroupDao - Start query of database with params: {}
2025-08-10 16:12:38.706 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, MAX(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = ?
ORDER BY ep.export_price DESC
LIMIT 1;
2025-08-10 16:12:38.706 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:12:38.717 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with sql: WITH latest_export AS (
    SELECT ep.*
    FROM export_price ep
    INNER JOIN (
        SELECT product_id, max(export_time) AS latest_time
        FROM export_price
        WHERE quantity_imported != 0
        GROUP BY product_id
    ) latest ON ep.product_id = latest.product_id AND ep.export_time = latest.latest_time
)
SELECT ep.export_time, p.code AS code, p.name as name, ep.export_price
FROM latest_export ep
LEFT JOIN product p ON p.id = ep.product_id
LEFT JOIN product_group pg ON p.group_id = pg.id
WHERE pg.id = 1
ORDER BY ep.export_price
LIMIT 1;
2025-08-10 16:12:38.717 [JavaFX Application Thread] DEBUG c.m.s.m.dao.impl.ExportPriceDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:12:38.745 [JavaFX Application Thread] ERROR c.m.s.m.dao.impl.ExportPriceDaoImpl - Error while setting parameters: Invalid value "1" for parameter "parameterIndex" [90008-222]
org.h2.jdbc.JdbcSQLDataException: Invalid value "1" for parameter "parameterIndex" [90008-222]
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:658)
	at com.h2database@2.2.222/org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at com.h2database@2.2.222/org.h2.message.DbException.get(DbException.java:223)
	at com.h2database@2.2.222/org.h2.message.DbException.getInvalidValueException(DbException.java:298)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setParameter(JdbcPreparedStatement.java:1408)
	at com.h2database@2.2.222/org.h2.jdbc.JdbcPreparedStatement.setLong(JdbcPreparedStatement.java:691)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.setParams(AbstractDao.java:53)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.AbstractDao.query(AbstractDao.java:94)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.dao.impl.ExportPriceDaoImpl.findProductHaveMinPriceByGroup(ExportPriceDaoImpl.java:178)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.service.impl.ExportPriceServiceImpl.findProductHaveMinPriceByGroup(ExportPriceServiceImpl.java:81)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailPresenter.findMinExportPriceByGroup(ProductDetailPresenter.java:60)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.createStatisticProductByGroup(ProductDetailScreen.java:330)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.lambda$detailForm$3(ProductDetailScreen.java:111)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper$Generic.fireValueChangedEvent(ListListenerHelper.java:329)
	at javafx.base/com.sun.javafx.collections.ListListenerHelper.fireValueChangedEvent(ListListenerHelper.java:73)
	at javafx.base/javafx.collections.ObservableListBase.fireChange(ObservableListBase.java:239)
	at javafx.base/javafx.collections.ListChangeBuilder.commit(ListChangeBuilder.java:482)
	at javafx.base/javafx.collections.ListChangeBuilder.endChange(ListChangeBuilder.java:541)
	at javafx.base/javafx.collections.ObservableListBase.endChange(ObservableListBase.java:211)
	at javafx.base/javafx.collections.ModifiableObservableListBase.addAll(ModifiableObservableListBase.java:109)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productDetail.ProductDetailScreen.showProduct(ProductDetailScreen.java:499)
	at com.manager.stock.manager_stock/com.manager.stock.manager_stock.screen.product.productList.ProductScreen.lambda$initHeader$2(ProductScreen.java:108)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Node.fireEvent(Node.java:8792)
	at javafx.controls/javafx.scene.control.Button.fire(Button.java:203)
	at javafx.controls/com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:208)
	at javafx.controls/com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:247)
	at javafx.base/com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:234)
	at javafx.base/com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at javafx.base/com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at javafx.base/com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at javafx.base/com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.base/javafx.event.Event.fireEvent(Event.java:198)
	at javafx.graphics/javafx.scene.Scene$MouseHandler.process(Scene.java:3897)
	at javafx.graphics/javafx.scene.Scene.processMouseEvent(Scene.java:1878)
	at javafx.graphics/javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2623)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:411)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:301)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:450)
	at javafx.graphics/com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:424)
	at javafx.graphics/com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:449)
	at javafx.graphics/com.sun.glass.ui.View.handleMouseEvent(View.java:557)
	at javafx.graphics/com.sun.glass.ui.View.notifyMouse(View.java:943)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at javafx.graphics/com.sun.glass.ui.win.WinApplication.lambda$runLoop$3(WinApplication.java:184)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-08-10 16:12:38.749 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 16:12:38.749 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:12:38.751 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity 
limit 5;
2025-08-10 16:12:38.751 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:12:38.753 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 16:12:38.753 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
2025-08-10 16:12:38.754 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with sql: select id.product_id as pId, p.name as name, p.code as code, id.quantity as quantity from inventory_detail id 
left join product p 
on p.id = id.product_id 
left join product_group pg 
on pg.id = p.group_id 
where pg.id = ? and id.academic_year = ?
order by id.quantity desc 
limit 5;
2025-08-10 16:12:38.754 [JavaFX Application Thread] DEBUG c.m.s.m.d.i.InventoryDetailDaoImpl - Start query of database with params: 1754735352081
